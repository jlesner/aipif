 <xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
    <xsl:output method="xml" version="1.0" encoding="UTF-8" indent="yes" />
    <xsl:strip-space elements="*" />
    

    <xsl:template match="story">
        <xsl:copy>
            <xsl:element name="path">
                <xsl:apply-templates select="scene"/>
            </xsl:element>
        </xsl:copy>
    </xsl:template>

    <xsl:template match="scene">

        <xsl:variable name="index" select="count(preceding-sibling::scene)+1"/>
   
        <xsl:copy>
            <xsl:apply-templates select="@*"/>
    
            <xsl:attribute name="index">
                <xsl:value-of select="$index"/>
            </xsl:attribute>

            <xsl:variable name="branch_count">
                <xsl:value-of select="@branch_count"/>
            </xsl:variable>

            <!-- <xsl:element name="setting">
                <xsl:text>Where and when does the scene take place: Interior or Exterior? location? time of day (day or night)? Paint a picture of the surroundings, the ambiance, any relevant objects or features and initial states of characters. </xsl:text>
            </xsl:element> -->

            <xsl:element name="introduction">
                <xsl:text>Replace this with words a narrator would use to introduce this scene to children. </xsl:text>
                <xsl:text>Do not mention a protagonist or use jargon. You are writing this for children to read. </xsl:text>
            </xsl:element>

            <xsl:element name="dialogue">
                <xsl:text>Replace this with a new scene dialogue suitable for children.</xsl:text>
                <xsl:text>Use a new line for each new speaker. Do not repeat from before. Refer to characters by name. </xsl:text>            
                <xsl:value-of select="outline"/>
                <!-- <xsl:text>Write scence dialogue as in a screen play. Do not use new XML tags. </xsl:text> -->
            </xsl:element>

            <xsl:element name="illustration">
                <xsl:text>Replace this with a vivid description of a single character or single object important in this scene. Just here do not use character names only their descriptons such as: man? woman? child? animal? what kind of animal? ... </xsl:text>
                <xsl:text>Pick something not already picked above. Do not mention anything else. Please use just two dozen vivid words. </xsl:text>
                <!-- <xsl:text>Make your description simple and self-contained because our illustrator will only see your description and nothing else. </xsl:text>
                <xsl:text>The names of characters etc. will not mean anything to them and our illustrator gets confused if you mention more than one thing so describe just one character or object and do not mention anything else. </xsl:text> -->
            </xsl:element>

            <!-- <xsl:element name="illustration_title">
                <xsl:text>Pick a short funny title to accompany the illustration you described above. </xsl:text>
            </xsl:element> -->

            <xsl:element name="sound">
                <xsl:text>Replace this with a vivid description of a single possible sound suitable for this scene. </xsl:text>
                <xsl:text>Pick something not already picked above. Do not mention anything else. Please use just two dozen vivid words.</xsl:text>
                <!-- <xsl:text>Vividly describe a single sound suitable to introduce this scene that matches the mood, location and gives context. Make your description self-contained because our sound effects team will only see your description and nothing else. </xsl:text> -->
            </xsl:element>        

            <xsl:element name="music">
                <xsl:text>Replace this with a vivid description of a single possible music composition suitable for this scene. </xsl:text>
                <xsl:text>Pick something not already picked above. Do not mention anything else. Please use just two dozen vivid words. </xsl:text>
                <!-- <xsl:text>Vividly describe music that matches this scene's mood, location and gives context. Make the description self-contained because our musician will only see your description and nothing else. </xsl:text> -->
            </xsl:element>
        
            <!-- <xsl:element name="abc_music">
                <xsl:text>Compose a suitable music tune for this scene using ABC music notation. </xsl:text>
                <xsl:text>Please split it across lines.</xsl:text>
            </xsl:element> -->

            <xsl:for-each select="(//node() | //@*)[position() &lt;= number($branch_count) ]">
                <xsl:element name="protagonist_reaction">
                    <!-- <xsl:text>Briefly propose a single different way the protagonist can react to the situation in this scene. If asked to propose more than one reaction make all reactions as different as possible from each other and make sure some are bad and some are good. Do not mention reactions are choices or options. </xsl:text> -->
                    <!-- <xsl:text>Briefly describe what the protagonist can do next after this scene. If, and only if, this scene has more than one protagonist_reaction element make all descriptions as different as possible from each other and make sure some are bad and some are good. Do not mention they are reactions or choices or options. </xsl:text> -->
                    <!-- <xsl:text>Replace this with  will the protagonist do after this scene? Propose to the reader a single unique action.</xsl:text> -->
                    <!-- <xsl:text>What will the protagonist do after this scene? Propose to the reader a single unique action.</xsl:text> -->
                    <!-- <xsl:text>Propose to the reader how the to the reader a single unique action.</xsl:text> -->
                    <xsl:text>Replace this with a description of an obviously bad decision / obviously bad action the main character will take after this scene. Do not judge the action / decision. </xsl:text>
                    <!-- <xsl:text>Replace this with a short child understandable fun description of a good decision / good outcome action the protagonist can take after this scene.</xsl:text> -->
                </xsl:element>
            </xsl:for-each>

        </xsl:copy>

    </xsl:template>

    <xsl:template match="@*|node()">
        <xsl:copy>
            <xsl:apply-templates select="@*|node()"/>
        </xsl:copy>
    </xsl:template>

</xsl:stylesheet>
